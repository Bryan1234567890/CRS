/* ========================= DECLARATIONS ========================= */

@mixin media($size) {
  @if $size == small {
    @media (max-width: 767px) {
      @content;
    }
  } @else if $size == medium {
    @media (min-width: 900px) {
      @content;
    }
  } @else if $size == small-medium {
    @media (max-width: 1199px) {
      @content;
    }
  } @else if $size == medium-only {
    @media (min-width: 900px) and (max-width: 1199px) {
      @content;
    }
  } @else if $size == large {
    @media (min-width: 1200px) {
      @content;
    }
  }
}

@mixin shadow($depth) {
  @if $depth==0 {
    box-shadow: none;
  } @else if $depth==1 {
    box-shadow: 0px 5px 9px 0px rgba(230, 230, 230, 0.3);
    // box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  } @else if $depth==2 {
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  } @else if $depth==3 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  } @else if $depth==4 {
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  } @else if $depth==5 {
    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
  }
}

@mixin transition($duration, $ease) {
  @if $ease==ease {
    transition: all $duration cubic-bezier(0.4, 0, 0.2, 1);
  } @else if $ease==bounce {
    transition: all $duration cubic-bezier(0.175, 0.885, 0.32, 1.275);
  } @else {
    transition: all $duration $ease;
  }
}

@mixin icon($unicode) {
  font-family: FontAwesome;
  content: $unicode;
}

//Padding mixin *usage @include padding(1px, 2px, 3px, 4px,);
@mixin padding($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}
//Margin mixin *usage @include margin(1px, 2px, 3px, 4px);
@mixin margin($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

//set button bg color
@mixin button-bg($bg) {
  $color: #fff;

  @if (lightness($bg) >=lightness(#aaa)) {
    color: #333;
    background: $bg;
  } @else {
    color: #fff;
    background: $bg;
  }

  &:hover {
    background: darken($bg, 8%);
    transition: all 0.3s ease;
  }

  &:active {
    background: darken($bg, 25%);
  }
}

// set radius

@mixin rounded($border) {
  -webkit-border-radius: $border;
  -moz-border-radius: $border;
  border-radius: $border;
}

// set gradient color

@mixin gradient($top, $bottom) {
  background-color: $bottom;
  background: -webkit-gradient(
    linear,
    left top,
    left bottom,
    from($top),
    to($bottom)
  );
  background: -moz-linear-gradient(top, $top, $bottom);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$top}', endColorstr='#{$bottom}');
}
